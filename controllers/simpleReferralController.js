const SafeMessageHelper = require('../utils/safeMessageHelper');

class SimpleReferralController {
    constructor(database, bot) {
        this.db = database;
        this.bot = bot;
    }

    // –ü—Ä–æ—Å—Ç–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    log(message, data = null) {
        const timestamp = new Date().toISOString();
        console.log(`[${timestamp}] REFERRAL: ${message}`, data ? JSON.stringify(data) : '');
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    async showReferralInfo(chatId, userId, messageId = null) {
        try {
            this.log('–ü–æ–∫–∞–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', { userId });

            const user = await this.db.get('SELECT * FROM users WHERE id = ?', [userId]);
            if (!user) {
                await this.bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return;
            }

            this.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', {
                userId,
                balance: user.balance,
                level1_referrals: user.level1_referrals,
                level2_referrals: user.level2_referrals,
                referral_code: user.referral_code
            });

            const referralMessage = `‚≠ê –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –∑–≤—ë–∑–¥—ã!

üéØ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
‚Ä¢ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞: +3 ‚≠ê
‚Ä¢ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π: +0.05 ‚≠ê

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üë• –†–µ—Ñ–µ—Ä–∞–ª—ã 1 —É—Ä–æ–≤–Ω—è: ${user.level1_referrals}
üë• –†–µ—Ñ–µ—Ä–∞–ª—ã 2 —É—Ä–æ–≤–Ω—è: ${user.level2_referrals}
üí∞ –ë–∞–ª–∞–Ω—Å: ${user.balance.toFixed(2)} ‚≠ê

üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
https://t.me/kirbystarsfarmbot?start=${user.referral_code}

üì≤ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!`;

            const keyboard = [
                [{ text: 'üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π', switch_inline_query: `üåü –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Kirby Stars Farm –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π Telegram Stars!\n\nüéÅ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ: https://t.me/kirbystarsfarmbot?start=${user.referral_code}` }],
                [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]
            ];

            if (messageId) {
                await SafeMessageHelper.safeEditMessage(this.bot, referralMessage, {
                    chat_id: chatId,
                    message_id: messageId,
                    reply_markup: {
                        inline_keyboard: keyboard
                    }
                });
            } else {
                await this.bot.sendMessage(chatId, referralMessage, {
                    reply_markup: {
                        inline_keyboard: keyboard
                    }
                });
            }

        } catch (error) {
            this.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', { error: error.message, userId });
            console.error('Error showing referral info:', error);
            await this.bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
        }
    }

    // –ü–†–û–°–¢–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥
    async processReferralReward(newUserId, referrerId) {
        try {
            this.log('–ù–∞—áÔøΩÔøΩ–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã', { newUserId, referrerId });

            // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–≥—Ä–∞–¥–∞ –µ—â—ë –Ω–µ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞
            const existingReward = await this.db.get(
                'SELECT id FROM transactions WHERE user_id = ? AND type = "referral" AND description LIKE ?',
                [referrerId, `%ID: ${newUserId}%`]
            );

            if (existingReward) {
                this.log('–ù–∞–≥—Ä–∞–¥–∞ —É–∂–µ –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞', { newUserId, referrerId, transactionId: existingReward.id });
                return;
            }

            // 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
            const referrer = await this.db.get('SELECT * FROM users WHERE id = ?', [referrerId]);
            if (!referrer) {
                this.log('–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', { referrerId });
                return;
            }

            this.log('–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –Ω–∞–π–¥–µ–Ω', { 
                referrerId,
                currentBalance: referrer.balance,
                currentLevel1: referrer.level1_referrals 
            });

            // 3. –ü–†–û–°–¢–´–ï –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è
            this.log('–û–ø–µ—Ä–∞—Ü–∏—è 1: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫ÔøΩÔøΩ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
            await this.db.run(
                'UPDATE users SET level1_referrals = level1_referrals + 1 WHERE id = ?',
                [referrerId]
            );

            this.log('–û–ø–µ—Ä–∞—Ü–∏—è 2: –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã');
            const reward = 3; // –ë–∞–∑–æ–≤–∞—è –Ω–∞–≥—Ä–∞–¥–∞
            await this.db.run(
                'UPDATE users SET balance = balance + ?, total_earned = total_earned + ? WHERE id = ?',
                [reward, reward, referrerId]
            );

            this.log('–û–ø–µ—Ä–∞—Ü–∏—è 3: –ó–∞–ø–∏—Å—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
            await this.db.run(
                'INSERT INTO transactions (user_id, type, amount, description) VALUES (?, ?, ?, ?)',
                [referrerId, 'referral', reward, `–†–µ—Ñ–µ—Ä–∞–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (ID: ${newUserId})`]
            );

            this.log('–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');

            // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            const updatedReferrer = await this.db.get('SELECT * FROM users WHERE id = ?', [referrerId]);
            this.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è', {
                referrerId,
                oldBalance: referrer.balance,
                newBalance: updatedReferrer.balance,
                balanceDiff: updatedReferrer.balance - referrer.balance,
                oldReferrals: referrer.level1_referrals,
                newReferrals: updatedReferrer.level1_referrals
            });

            // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
            const newUserInfo = await this.db.get('SELECT username, first_name FROM users WHERE id = ?', [newUserId]);
            const newUserName = newUserInfo ? (newUserInfo.username ? `@${newUserInfo.username}` : newUserInfo.first_name) : '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

            try {
                await this.bot.sendMessage(referrerId, `üéâ **–ù–û–í–´–ô –†–ï–§–ï–†–ê–õ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!**

üë§ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è: **${newUserName}**

üí∞ **–ù–∞–≥—Ä–∞–¥–∞:** ${reward.toFixed(2)} ‚≠ê

üî• –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –µ—â—ë –±–æ–ª—å—à–µ!`, {
                    parse_mode: 'Markdown',
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '‚≠ê –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â—ë –¥—Ä—É–∑–µ–π', callback_data: 'menu_referral' }],
                            [{ text: 'üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data: 'menu_profile' }]
                        ]
                    }
                });

                this.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', { referrerId });
            } catch (notificationError) {
                this.log('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', { 
                    error: notificationError.message,
                    referrerId 
                });
                console.error('Error sending referral notification:', notificationError);
            }

            // 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ 2 —É—Ä–æ–≤–Ω—è
            if (referrer.referrer_id) {
                this.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ 2 —É—Ä–æ–≤–Ω—è', { level2ReferrerId: referrer.referrer_id });
                
                await this.db.run(
                    'UPDATE users SET level2_referrals = level2_referrals + 1 WHERE id = ?',
                    [referrer.referrer_id]
                );

                const level2Reward = 0.05;
                await this.db.run(
                    'UPDATE users SET balance = balance + ?, total_earned = total_earned + ? WHERE id = ?',
                    [level2Reward, level2Reward, referrer.referrer_id]
                );

                await this.db.run(
                    'INSERT INTO transactions (user_id, type, amount, description) VALUES (?, ?, ?, ?)',
                    [referrer.referrer_id, 'referral', level2Reward, `–†–µ—Ñ–µ—Ä–∞–ª 2 —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (ID: ${newUserId})`]
                );

                this.log('–†–µ—Ñ–µ—Ä–∞–ª 2 —É—Ä–æ–≤–Ω—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω', { level2ReferrerId: referrer.referrer_id });

                // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞ 2 —É—Ä–æ–≤–Ω—è
                try {
                    await this.bot.sendMessage(referrer.referrer_id, `üéâ **–†–ï–§–ï–†–ê–õ 2 –£–†–û–í–ù–Ø!**

üë• –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª –ø—Ä–∏–≤—ë–ª –¥—Ä—É–≥–∞!

üí∞ **–ù–∞–≥—Ä–∞–¥–∞:** ${level2Reward.toFixed(3)} ‚≠ê

üî• –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–æ–≤!`, {
                        parse_mode: 'Markdown',
                        reply_markup: {
                            inline_keyboard: [
                                [{ text: '‚≠ê –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π', callback_data: 'menu_referral' }]
                            ]
                        }
                    });
                } catch (notificationError) {
                    this.log('–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è 2 —É—Ä–æ–≤–Ω—è', { error: notificationError.message });
                }
            }

            this.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');

        } catch (error) {
            this.log('–û–®–ò–ë–ö–ê –ø—Ä–∏ –æÔøΩÔøΩ—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã', {
                error: error.message,
                stack: error.stack,
                newUserId,
                referrerId
            });
            console.error('Error processing referral reward:', error);
        }
    }

    // –ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ—Å—á—ë—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–±–µ–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π)
    async recalculateReferralCounts(userId) {
        try {
            this.log('–ü–µ—Ä–µ—Å—á—ë—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', { userId });

            // –°—á–∏—Ç–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ 1 —É—Ä–æ–≤–Ω—è
            const level1Count = await this.db.get(
                'SELECT COUNT(*) as count FROM users WHERE referrer_id = ?',
                [userId]
            );

            // –°—á–∏—Ç–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ 2 —É—Ä–æ–≤–Ω—è
            const level2Count = await this.db.get(
                'SELECT COUNT(*) as count FROM users u1 JOIN users u2 ON u1.id = u2.referrer_id WHERE u1.referrer_id = ?',
                [userId]
            );

            this.log('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–µ—Å—á—ë—Ç–∞', {
                userId,
                level1: level1Count?.count || 0,
                level2: level2Count?.count || 0
            });

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫–∏
            await this.db.run(
                'UPDATE users SET level1_referrals = ?, level2_referrals = ? WHERE id = ?',
                [level1Count?.count || 0, level2Count?.count || 0, userId]
            );

            this.log('–°—á—ë—Ç—á–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');

        } catch (error) {
            this.log('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—á—ë—Ç–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', { error: error.message, userId });
            console.error('Error recalculating referral counts:', error);
        }
    }
}

module.exports = SimpleReferralController;
