// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º
const Database = require('./database');

async function testDatabase() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    const db = new Database();
    await db.init();
    
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìù –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    const testUserId = 999999999;
    
    // –£–¥–∞–ª—è–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å
    await db.run('DELETE FROM user_pets WHERE user_id = ?', [testUserId]);
    await db.run('DELETE FROM transactions WHERE user_id = ?', [testUserId]);
    await db.run('DELETE FROM users WHERE id = ?', [testUserId]);
    
    // –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await db.run(
        'INSERT INTO users (id, username, first_name, balance, referral_code, level1_referrals, level2_referrals, total_earned) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',
        [testUserId, 'test_user', '–¢–µ—Å—Ç', 100, 'TEST123', 0, 0, 0]
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–∑–¥–∞–ª—Å—è
    const user = await db.get('SELECT * FROM users WHERE id = ?', [testUserId]);
    console.log('–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
    
    // –¢–µ—Å—Ç 2: –ü–æ–∫—É–ø–∫–∞ –ø–∏—Ç–æ–º—Ü–∞
    console.log('\nüêæ –¢–µ—Å—Ç 2: –ü–æ–∫—É–ø–∫–∞ –ø–∏—Ç–æ–º—Ü–∞');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
    const pet = await db.get('SELECT * FROM pets LIMIT 1');
    console.log('–ü–∏—Ç–æ–º–µ—Ü –¥–ª—è –ø–æ–∫—É–ø–∫–∏:', pet);
    
    if (pet) {
        // –ü–æ–∫—É–ø–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞
        console.log(`üí∞ –î–æ –ø–æ–∫—É–ø–∫–∏: –±–∞–ª–∞–Ω—Å = ${user.balance}`);
        
        // –ü—Ä–æ—Å—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        await db.run('UPDATE users SET balance = balance - ? WHERE id = ?', [pet.base_price, testUserId]);
        const insertResult = await db.run('INSERT INTO user_pets (user_id, pet_id, level) VALUES (?, ?, ?)', [testUserId, pet.id, 1]);
        await db.run('INSERT INTO transactions (user_id, type, amount, description) VALUES (?, ?, ?, ?)', [testUserId, 'pet', -pet.base_price, `–¢–µ—Å—Ç –ø–æ–∫—É–ø–∫–∏: ${pet.name}`]);
        
        console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
        console.log('ID –∫—É–ø–ª–µ–Ω–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞:', insertResult.id);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const updatedUser = await db.get('SELECT * FROM users WHERE id = ?', [testUserId]);
        const userPet = await db.get('SELECT * FROM user_pets WHERE user_id = ? AND pet_id = ?', [testUserId, pet.id]);
        const transaction = await db.get('SELECT * FROM transactions WHERE user_id = ? AND type = "pet" ORDER BY id DESC LIMIT 1', [testUserId]);
        
        console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
        console.log('–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏:', updatedUser.balance);
        console.log('–ö—É–ø–ª–µ–Ω–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü:', userPet);
        console.log('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:', transaction);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        if (userPet && transaction && updatedUser.balance === (user.balance - pet.base_price)) {
            console.log('‚úÖ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢ –ü–†–ê–í–ò–õ–¨–ù–û!');
        } else {
            console.log('‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –î–ê–ù–ù–´–ú–ò!');
        }
    }
    
    // –¢–µ—Å—Ç 3: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
    console.log('\nüë• –¢–µ—Å—Ç 3: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞');
    
    const referralUserId = 999999998;
    await db.run('DELETE FROM users WHERE id = ?', [referralUserId]);
    
    // –°–æ–∑–¥–∞—ë–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    await db.run(
        'INSERT INTO users (id, username, first_name, balance, referrer_id, referral_code, level1_referrals, level2_referrals, total_earned) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)',
        [referralUserId, 'referral_user', '–†–µ—Ñ–µ—Ä–∞–ª', 0, testUserId, 'REF123', 0, 0, 0]
    );
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á—ë—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    await db.run('UPDATE users SET level1_referrals = level1_referrals + 1 WHERE id = ?', [testUserId]);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≥—Ä–∞–¥—É
    await db.run('UPDATE users SET balance = balance + 3, total_earned = total_earned + 3 WHERE id = ?', [testUserId]);
    await db.run('INSERT INTO transactions (user_id, type, amount, description) VALUES (?, ?, ?, ?)', [testUserId, 'referral', 3, '–¢–µ—Å—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã']);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const userWithReferral = await db.get('SELECT * FROM users WHERE id = ?', [testUserId]);
    const referralUser = await db.get('SELECT * FROM users WHERE id = ?', [referralUserId]);
    const referralTransaction = await db.get('SELECT * FROM transactions WHERE user_id = ? AND type = "referral" ORDER BY id DESC LIMIT 1', [testUserId]);
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´:');
    console.log('–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userWithReferral);
    console.log('–ü—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', referralUser);
    console.log('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–≥—Ä–∞–¥—ã:', referralTransaction);
    
    if (userWithReferral.level1_referrals === 1 && referralTransaction) {
        console.log('‚úÖ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢!');
    } else {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú–´ –° –†–ï–§–ï–†–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–û–ô!');
    }
    
    // –û—á–∏—Å—Ç–∫–∞
    console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    await db.run('DELETE FROM user_pets WHERE user_id = ?', [testUserId]);
    await db.run('DELETE FROM transactions WHERE user_id IN (?, ?)', [testUserId, referralUserId]);
    await db.run('DELETE FROM users WHERE id IN (?, ?)', [testUserId, referralUserId]);
    
    await db.close();
    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testDatabase().catch(console.error);
